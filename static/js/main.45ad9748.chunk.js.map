{"version":3,"sources":["redux/constants/action-types.js","redux/actions/seatActions.js","components/Seat/Seat.js","redux/actions/seatBookingActions.js","components/SeatMatrix/SeatMatrix.js","components/RequiredSeats/RequiredSeats.js","pages/Booking/Booking.js","pages/MoviesListing/MoviesListings.js","redux/actions/moviesActions.js","App.js","redux/reducers/moviesReducer.js","redux/reducers/seatsReducer.js","redux/reducers/seatBookingReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["ActionTypes","selectSeat","seats","type","payload","Seat","props","className","status","restricted","title","seatNumber","bookSeat","seat","SeatMatrix","seatsDetail","useSelector","state","bookedSeats","dispatch","useDispatch","useState","selectedGroupId","setSelectedGropuId","selectSeatsHandler","currSeatsDetail","currBookedSeats","currSeatIndex","rowID","groupID","seatPrice","rowSize","newSeatsDeatil","newBookedSeats","seatGroups","rows","autoSelectedSeats","autoSelectionSeatsRequirement","requiredSeats","noOfSeatsBooked","seatIndex","totalAmmount","seatHandler","groupId","currSeatStatus","Object","keys","forEach","unSelectSeatsHandler","renderSeats","map","index","group","groupName","row","onClick","length","renderFooter","movieName","RequiredSeats","selectedRequiredSeats","setSelectedRequiredSeats","no","Booking","movieId","useParams","fetchSeats","response","fakeAPI","getSeatsDeatailByMovie","useEffect","MovieListings","movies","fetchMovies","getMoviesList","renderList","moviesList","movie","to","src","imgURL","App","path","exact","component","intialState","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6izBAAaA,EACC,aADDA,EAEA,YAFAA,EAGQ,oBAHRA,EAIE,cAJFA,EAKI,gBALJA,EAMA,YANAA,EAOE,cCEFC,EAAa,SAACC,GACzB,MAAO,CACLC,KAAMH,EACNI,QAASF,I,oCCAEG,EAVF,SAACC,GACV,OAAO,qBACHC,UAAS,eAAUD,EAAME,QAAhB,OAA0BF,EAAMG,WAAc,cAAgB,IACvEC,MAAwB,aAAfJ,EAAME,OAAqB,wBAAyBF,EAAMG,WAAY,oCAAoC,GAFhH,SAIFH,EAAMK,cCEFC,EAAW,SAACC,GACvB,MAAO,CACLV,KAAMH,EACNI,QAASS,IC4HEC,EA/HI,WACf,IAAQC,EAAgBC,aAAY,SAACC,GAAD,OAAWA,EAAMf,SAA7Ca,YACAG,EAAgBF,aAAY,SAACC,GAAD,OAAWA,KAAvCC,YACFC,EAAWC,cAEjB,EAA8CC,mBAAS,MAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAEMC,EAAqB,SAACC,EAAiBC,EAAiBC,EAAeC,EAAOC,EAASC,EAAWC,GACpG,IAAIC,EAAc,eAAQP,GACpBQ,EAAc,eAAQP,GAC5BM,EAAeE,WAAWL,GAASM,KAAKP,GAAOD,GAA/C,2BACOK,EAAeE,WAAWL,GAASM,KAAKP,GAAOD,IADtD,IAEInB,OAAQ,aAGZ,IAAI4B,EAAoB,EACpBC,EAAgCJ,EAAeK,eAAiBL,EAAeM,gBAAkB,GACrG,GAAKR,EAAWJ,EAAkBU,EAC9B,IAAK,IAAIG,EAAYb,EAAgB,EAAGa,GAAab,EAAgBU,GACQ,cAArEL,EAAeE,WAAWL,GAASM,KAAKP,GAAOY,GAAWhC,OADkCgC,IAI5FJ,IACAJ,EAAeE,WAAWL,GAASM,KAAKP,GAAOY,GAA/C,2BACOR,EAAeE,WAAWL,GAASM,KAAKP,GAAOY,IADtD,IAEIhC,OAAQ,aAOxB,OAFAyB,EAAeM,gBAAkBN,EAAeM,gBAAkBH,EAAoB,EACtFH,EAAeQ,aAAeR,EAAeM,gBAAkBT,EACxD,CAAEf,YAAaiB,EAAgBd,YAAae,IA4BjDS,EAAc,SAAClC,EAAQgC,EAAWZ,EAAOC,EAASC,EAAWC,GAG/D,IAduBY,EAYvB,GAAe,aAAXnC,EAGJ,IAfuBmC,EAcad,EAb/BP,EAGMA,IAAoBqB,GAC3BpB,EAAmBoB,GACZrB,GAECA,GANRC,EAAmBoB,GACZA,MAYOd,GAAWX,EAAYqB,kBAAoBrB,EAAYoB,cAAe,CACpF,IAAIM,EA/BiB,SAACnB,EAAiBC,GAC3C,IAAMM,EAAc,eAAQP,GAC5BoB,OAAOC,KAAKd,EAAeE,YAAYa,SAAQ,SAAAlB,GAC3CgB,OAAOC,KAAKd,EAAeE,WAAWL,GAASM,MAAMY,SAAQ,SAAAnB,GACzDI,EAAeE,WAAWL,GAASM,KAAKP,GAAOmB,SAAQ,SAAAlC,GAC/B,aAAhBA,EAAKL,SAAuBK,EAAKL,OAAS,sBAI1D,IAAMyB,EAAc,eAAQP,GAG5B,OAFAO,EAAeM,gBAAkB,EACjCN,EAAeQ,aAAe,EACvB,CAAE1B,YAAaiB,EAAgBd,YAAae,GAmB1Be,CAAqBjC,EAAaG,GACvD0B,EAAiBpB,EAAmBoB,EAAe7B,YAAa6B,EAAe1B,YAAasB,EAAWZ,EAAOC,EAASC,EAAWC,GAClIZ,EAASlB,EAAW2C,EAAe7B,cACnCI,EAASP,EAASgC,EAAe1B,kBAEhC,IAAe,cAAXV,EAKJ,OAAO,KAJR,IAAIoC,EAAiBpB,EAAmBT,EAAaG,EAAasB,EAAWZ,EAAOC,EAASC,EAAWC,GACxGZ,EAASlB,EAAW2C,EAAe7B,cACnCI,EAASP,EAASgC,EAAe1B,gBAKnC+B,EAAc,qBAAK1C,UAAU,aAAf,SAChBsC,OAAOC,KAAK/B,EAAYmB,YAAYgB,KAAI,SAACrB,EAASsB,GAC9C,IAAMC,EAAQrC,EAAYmB,WAAWL,GACrC,OACI,sBAAKtB,UAAU,YAAf,UACI,sBAAKA,UAAU,YAAf,UAA6B6C,EAAMC,UAAnC,OAAkDD,EAAMtB,aACxD,qBAAKvB,UAAU,OAAf,SAEQsC,OAAOC,KAAKM,EAAMjB,MAAMe,KAAI,SAACI,EAAKH,GAC9B,OAAQ,sBAAK5C,UAAU,WAAf,UACJ,qBAAKA,UAAU,UAAf,SAA0B+C,IACtBF,EAAMjB,KAAKmB,GAAKJ,KAAI,SAACrC,EAAMsC,GACvB,OACI,qBAAKI,QAAS,kBAAMb,EAAY7B,EAAKL,OAAQ2C,EAAOG,EAAKzB,EAASuB,EAAMtB,UAAWsB,EAAMjB,KAAKmB,GAAKE,SAAnG,SAEI,cAAC,EAAD,CACIhD,OAAS2C,IAAUC,EAAMjB,KAAKmB,GAAKE,OAAS,EAApC,UAA4C3C,EAAKL,OAAjD,YAAoEK,EAAKL,OACjFC,WAAYa,IAAoBO,GAAWP,EAC3CX,WAAYE,EAAKF,cAJhBwC,QALcA,UALvBA,QA8BtCM,EAAe,qBAAKlD,UAAU,gBAAf,SACjB,yBAAQA,UAAU,YAAlB,iBAAmCW,EAAYuB,kBAEnD,OACI,gCACI,sBAAKlC,UAAU,gBAAf,UACI,qBAAKA,UAAU,YAAf,SAA4BQ,EAAY2C,YACxC,sBAAKnD,UAAU,qBAAf,UAAqCW,EAAYqB,gBAAjD,QAAuG,IAAhCrB,EAAYqB,iBAAyB,IAA5G,kBAEHU,EACA/B,EAAYoB,gBAAkBpB,EAAYqB,iBAAmBkB,MChG3DE,G,MA9BO,WAElB,IACA,EAA4DtC,mBAAS,GAArE,mBAAQuC,EAAR,KAA+BC,EAA/B,KACM1C,EAAWC,cAEjB,OACI,sBAAKb,UAAU,wBAAf,UACI,oEACA,qBAAKA,UAAU,cAAf,SAPU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAQvB2C,KAAI,SAACY,EAAIX,GAChB,OACI,qBACI5C,UAAS,yBAAqBqD,IAA0BE,EAAM,YAAc,IAC5EP,QAAU,kBAAIM,EAAyBC,IAF3C,SAKKA,GAFKX,QAOtB,wBACA5C,UAAU,aACVgD,QAAU,WAAMK,GAAyBzC,EF1B5C,CACLhB,KAAMH,EACNI,QEwB2E,CAAC,cAAiBwD,MAFrF,+BCCGG,EApBC,WACZ,IAAQC,EAAYC,cAAZD,QACF7C,EAAWC,cACTF,EAAgBF,aAAY,SAACC,GAAD,OAAWA,KAAvCC,YAGFgD,EAAa,WACf,IAAMC,EAAWC,EAAQC,uBAAuBL,GAChD7C,ELbC,CACLhB,KAAMH,EACNI,QKWsB+D,KAOtB,OAJAG,qBAAU,WACNJ,MACD,IAGC,mCAAIhD,EAAYoB,cAAiB,cAAC,EAAD,IAAiB,cAAC,EAAD,O,QCmB3CiC,G,MApCO,WAClB,IAAMC,EAASxD,aAAY,SAACC,GAAD,OAAWA,EAAMuD,UACtCrD,EAAWC,cAGXqD,EAAc,WAChB,IAAMN,EAAWC,EAAQM,cACzBvD,ECXC,CACLhB,KAAMH,EACNI,QDSuB+D,KAGvBG,qBAAU,WACNG,MACD,IAGH,IAAME,EAAaH,EAAOI,WAAW1B,KAAI,SAAA2B,GACrC,OACI,qBAAKtE,UAAU,gBAAf,SACI,cAAC,IAAD,CAAMuE,GAAE,mBAAcD,EAAMb,SAA5B,SACI,sBAAKzD,UAAU,OAAf,UACI,qBAAKA,UAAU,QAAf,SACI,qBAAKwE,IAAKF,EAAMG,WAEpB,qBAAKzE,UAAU,UAAf,SACI,qBAAKA,UAAW,gBAAhB,SAAiCsE,EAAMnB,oBAPnBmB,EAAMb,YAclD,OACI,mCAAGW,MEnBIM,MAff,WAEE,OACE,qBAAK1E,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2E,KAAK,IAAIC,OAAK,EAACC,UAAWb,IACjC,cAAC,IAAD,CAAOW,KAAK,oBAAoBE,UAAWrB,IAC3C,cAAC,IAAD,qC,QCZJsB,EAAc,CAClBT,WAAY,ICDRS,EAAc,CAClBtE,YAAa,CACXmB,WAAY,KCFVmD,EAAc,CAClB/C,cAAe,EACfC,gBAAiB,EACjBE,aAAc,GCMD6C,EALEC,YAAgB,CAC/Bf,OHD2B,WAA6C,IAA5CvD,EAA2C,uDAAnCoE,EAAmC,yCAApBlF,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACzD,OAAQD,GACN,KAAKH,EACH,OAAO,2BAAKiB,GAAZ,IACE2D,WAAYxE,IAChB,QACE,OAAOa,IGJXf,MFA0B,WAA6C,IAA5Ce,EAA2C,uDAAnCoE,EAAmC,yCAApBlF,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACxD,OAAQD,GACN,KAAKH,EACH,OAAO,2BACFiB,GADL,IAEEF,YAAaX,IAEjB,KAAKJ,EAKL,KAAKA,EACH,OAAO,2BACFiB,GADL,IAEEF,YAAY,eAAMX,KAEtB,QACE,OAAOa,IEjBXC,YDDgC,WAA6C,IAA5CD,EAA2C,uDAAnCoE,EAAmC,yCAApBlF,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC9D,OAAQD,GACN,KAAKH,EACH,OAAO,2BACFiB,GADL,IAEEqB,cAAelC,EAAQkC,gBAE3B,KAAKtC,EAML,KAAKA,EACH,OAAO,2BACFiB,GADL,IAEEsB,gBAAiBnC,EAAQmC,gBACzBE,aAAcrC,EAAQqC,eAE1B,QACE,OAAOxB,MElBEuE,EALDC,YACZH,EACA,ICAFI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.45ad9748.chunk.js","sourcesContent":["export const ActionTypes = {\n  SET_MOVIES: \"SET_MOVIES\",\n  SET_SEATS: \"SET_SEATS\",\n  SET_REQUIREDSEATS: \"SET_REQUIREDSEATS\",\n  SELECT_SEAT: \"SELECT_SEAT\",\n  UNSELECT_SEAT: \"UNSELECT_SEAT\",\n  BOOK_SEAT: \"BOOK_SEAT\",\n  UNBOOK_SEAT: \"UNBOOK_SEAT\"\n};\n","import { ActionTypes } from \"../constants/action-types\";\n\nexport const setSeats = (seats) => {\n  return {\n    type: ActionTypes.SET_SEATS,\n    payload: seats,\n  };\n};\n\nexport const selectSeat = (seats) => {\n  return {\n    type: ActionTypes.SELECT_SEAT,\n    payload: seats,\n  };\n};\n\nexport const unSelectSeat = (seats) => {\n  return {\n    type: ActionTypes.UNSELECT_SEAT,\n    payload: seats,\n  };\n};\n","import \"./Seat.css\"\n\nconst Seat = (props) => {\n    return <div\n        className={`seat ${props.status}${(props.restricted) ? ' restricted' : ''}`}\n        title= {(props.status==='occupied')?'Seat already occupied':(props.restricted)?'Select Seats from different Group':''}\n    >\n        {props.seatNumber}\n    </div>\n}\n\n\nexport default Seat;","import { ActionTypes } from \"../constants/action-types\";\n\nexport const setRequiredSeats = (seats) => {\n  return {\n    type: ActionTypes.SET_REQUIREDSEATS,\n    payload: seats,\n  };\n};\n\nexport const bookSeat = (seat) => {\n  return {\n    type: ActionTypes.BOOK_SEAT,\n    payload: seat,\n  };\n};\n\nexport const unBookSeat = (seat) => {\n  return {\n    type: ActionTypes.UNBOOK_SEAT,\n    payload: seat,\n  };\n};\n","import \"./SeatMatrix.css\";\nimport Seat from \"../Seat/Seat\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectSeat } from \"../../redux/actions/seatActions\";\nimport { bookSeat } from \"../../redux/actions/seatBookingActions\";\nimport { useState } from \"react\";\n\n\n\nconst SeatMatrix = () => {\n    const { seatsDetail } = useSelector((state) => state.seats);\n    const { bookedSeats } = useSelector((state) => state);\n    const dispatch = useDispatch();\n    //Local state for seat group restrictions\n    const [selectedGroupId, setSelectedGropuId] = useState(null);\n\n    const selectSeatsHandler = (currSeatsDetail, currBookedSeats, currSeatIndex, rowID, groupID, seatPrice, rowSize) => {\n        let newSeatsDeatil = { ...currSeatsDetail };\n        const newBookedSeats = { ...currBookedSeats };\n        newSeatsDeatil.seatGroups[groupID].rows[rowID][currSeatIndex] = {\n            ...newSeatsDeatil.seatGroups[groupID].rows[rowID][currSeatIndex],\n            status: \"selected\"\n        }\n        // Select the adjacent Right seats, if available\n        let autoSelectedSeats = 0;\n        let autoSelectionSeatsRequirement = newBookedSeats.requiredSeats - (newBookedSeats.noOfSeatsBooked + 1);\n        if ((rowSize - (currSeatIndex)) > autoSelectionSeatsRequirement) {\n            for (let seatIndex = currSeatIndex + 1; seatIndex <= currSeatIndex + autoSelectionSeatsRequirement; seatIndex++) {\n                if (newSeatsDeatil.seatGroups[groupID].rows[rowID][seatIndex].status !== 'available') {\n                    break;\n                } else {\n                    autoSelectedSeats++;\n                    newSeatsDeatil.seatGroups[groupID].rows[rowID][seatIndex] = {\n                        ...newSeatsDeatil.seatGroups[groupID].rows[rowID][seatIndex],\n                        status: \"selected\"\n                    }\n                }\n            }\n        }\n        newBookedSeats.noOfSeatsBooked = newBookedSeats.noOfSeatsBooked + autoSelectedSeats + 1;\n        newBookedSeats.totalAmmount = newBookedSeats.noOfSeatsBooked * seatPrice;\n        return { seatsDetail: newSeatsDeatil, bookedSeats: newBookedSeats };\n    }\n    const unSelectSeatsHandler = (currSeatsDetail, currBookedSeats) => {\n        const newSeatsDeatil = { ...currSeatsDetail };\n        Object.keys(newSeatsDeatil.seatGroups).forEach(groupID => {\n            Object.keys(newSeatsDeatil.seatGroups[groupID].rows).forEach(rowID => {\n                newSeatsDeatil.seatGroups[groupID].rows[rowID].forEach(seat => {\n                    if (seat.status === \"selected\") seat.status = \"available\";\n                })\n            })\n        })\n        const newBookedSeats = { ...currBookedSeats };\n        newBookedSeats.noOfSeatsBooked = 0;\n        newBookedSeats.totalAmmount = 0;\n        return { seatsDetail: newSeatsDeatil, bookedSeats: newBookedSeats };\n\n    }\n    const getSelectionGroup = (groupId) => {\n        if (!selectedGroupId) {\n            setSelectedGropuId(groupId);\n            return groupId;\n        } else if (selectedGroupId !== groupId) {\n            setSelectedGropuId(groupId);\n            return selectedGroupId;\n        }\n        else return selectedGroupId;\n    }\n\n    const seatHandler = (status, seatIndex, rowID, groupID, seatPrice, rowSize) => {\n        if (status === 'occupied') return;\n        // get the currently selected group\n        const currGroup = getSelectionGroup(groupID);\n        if (currGroup !== groupID || bookedSeats.noOfSeatsBooked === bookedSeats.requiredSeats) {\n            let currSeatStatus = unSelectSeatsHandler(seatsDetail, bookedSeats);\n            currSeatStatus = selectSeatsHandler(currSeatStatus.seatsDetail, currSeatStatus.bookedSeats, seatIndex, rowID, groupID, seatPrice, rowSize);\n            dispatch(selectSeat(currSeatStatus.seatsDetail));\n            dispatch(bookSeat(currSeatStatus.bookedSeats));\n        }\n        else if (status === \"available\") {\n            let currSeatStatus = selectSeatsHandler(seatsDetail, bookedSeats, seatIndex, rowID, groupID, seatPrice, rowSize);\n            dispatch(selectSeat(currSeatStatus.seatsDetail));\n            dispatch(bookSeat(currSeatStatus.bookedSeats));\n        }\n        else return null;\n    }\n\n    const renderSeats = <div className=\"seatMatrix\">{\n        Object.keys(seatsDetail.seatGroups).map((groupID, index) => {\n            const group = seatsDetail.seatGroups[groupID];\n            return (\n                <div className=\"seatGroup\" key={index}>\n                    <div className=\"groupDesc\" >{group.groupName}-Rs {group.seatPrice}</div>\n                    <div className=\"rows\" >\n                        {\n                            Object.keys(group.rows).map((row, index) => {\n                                return (<div className=\"seatsRow\" key={index}>\n                                    <div className=\"rowName\">{row}</div>{\n                                        group.rows[row].map((seat, index) => {\n                                            return (\n                                                <div onClick={() => seatHandler(seat.status, index, row, groupID, group.seatPrice, group.rows[row].length)}\n                                                    key={index}>\n                                                    <Seat\n                                                        status={(index === group.rows[row].length / 2) ? `${seat.status} midSeat` : seat.status}\n                                                        restricted={selectedGroupId !== groupID && selectedGroupId}\n                                                        seatNumber={seat.seatNumber}\n                                                    />\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            )\n\n        })}\n    </div>\n    const renderFooter = <div className=\"bookingFooter\">\n        <button className=\"payButton\">Pay {bookedSeats.totalAmmount}</button>\n    </div>\n    return (\n        <div>\n            <div className=\"bookingheader\">\n                <div className=\"movieName\">{seatsDetail.movieName}</div>\n                <div className=\"totalSelectedSeats\">{bookedSeats.noOfSeatsBooked} Seat{bookedSeats.noOfSeatsBooked !== 1 && 's'} Selected</div>\n            </div>\n            {renderSeats}\n            {bookedSeats.requiredSeats === bookedSeats.noOfSeatsBooked && renderFooter}\n        </div>\n    );\n}\n\nexport default SeatMatrix;","import \"./RequiredSeats.css\"\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setRequiredSeats } from \"../../redux/actions/seatBookingActions\";\n\nconst RequiredSeats = () => {\n    // Max values of required seats is 10\n    const noOfSeats = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    const [ selectedRequiredSeats, setSelectedRequiredSeats ] = useState(0);\n    const dispatch = useDispatch();\n\n    return (\n        <div className=\"requiredSeatsSelector\">\n            <div> Select Required Number of Seats </div>\n            <div className=\"seatOptions\">\n                {noOfSeats.map((no, index) => {\n                    return (\n                        <div\n                            className={`selectNoOfSeats${(selectedRequiredSeats === no) ? ' selected' : ''}`}\n                            onClick= {()=>setSelectedRequiredSeats(no)}\n                            key= {index}\n                        >\n                            {no}\n                        </div>\n                    )\n                })}\n            </div>\n            <button \n            className=\"seatSelect\"\n            onClick= {()=> {selectedRequiredSeats && dispatch(setRequiredSeats({\"requiredSeats\": selectedRequiredSeats}))}}\n            >Select Seats</button>\n        </div>\n    );\n}\n\nexport default RequiredSeats;","import { useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport fakeAPI from \"../../fakeAPI/getSeatsDeatailByMovie\";\nimport { setSeats } from \"../../redux/actions/seatActions\";\nimport SeatMatrix from \"../../components/SeatMatrix/SeatMatrix\";\nimport RequiredSeats from \"../../components/RequiredSeats/RequiredSeats\";\n\nconst Booking = () => {\n    const { movieId } = useParams();\n    const dispatch = useDispatch();\n    const { bookedSeats } = useSelector((state) => state);\n\n    //get list of Movies\n    const fetchSeats = () => {\n        const response = fakeAPI.getSeatsDeatailByMovie[movieId];\n        dispatch(setSeats(response));\n    }\n\n    useEffect(() => {\n        fetchSeats();\n    }, []);\n\n    return (\n        <>{(bookedSeats.requiredSeats) ? <SeatMatrix /> : <RequiredSeats />}</>\n    )\n}\n\nexport default Booking;","import fakeAPI from \"../../fakeAPI/getMoviesList\"\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setMovies } from \"../../redux/actions/moviesActions\";\nimport \"./MoviesListings.css\"\n\nconst MovieListings = () => {\n    const movies = useSelector((state) => state.movies);\n    const dispatch = useDispatch();\n\n    //get list of Movies\n    const fetchMovies = () => {\n        const response = fakeAPI.getMoviesList;\n        dispatch(setMovies(response));\n    }\n\n    useEffect(() => {\n        fetchMovies();\n    }, []);\n\n\n    const renderList = movies.moviesList.map(movie => {\n        return (\n            <div className=\"moviesListing\" key={movie.movieId}>\n                <Link to={`/booking/${movie.movieId}`}>\n                    <div className=\"card\">\n                        <div className=\"image\">\n                            <img src={movie.imgURL} />\n                        </div>\n                        <div className=\"content\">\n                            <div className= \"contentHeader\">{movie.movieName}</div>\n                        </div>\n                    </div>\n                </Link>\n            </div>\n        );\n    })\n    return (\n        <>{renderList}</>\n    );\n}\n\nexport default MovieListings;","import { ActionTypes } from \"../constants/action-types\";\n\nexport const setMovies = (moviesList) => {\n  return {\n    type: ActionTypes.SET_MOVIES,\n    payload: moviesList,\n  };\n};\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Booking from \"./pages/Booking/Booking\";\nimport MovieListings from \"./pages/MoviesListing/MoviesListings\";\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={MovieListings} />\n          <Route path=\"/booking/:movieId\" component={Booking} />\n          <Route>404 Not Found!</Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ActionTypes } from \"../constants/action-types\";\nconst intialState = {\n  moviesList: []\n};\n\nexport const moviesReducer = (state = intialState, { type, payload }) => {\n  switch (type) {\n    case ActionTypes.SET_MOVIES:\n      return { ...state,\n        moviesList: payload };\n    default:\n      return state;\n  }\n};\n","import { ActionTypes } from \"../constants/action-types\";\nconst intialState = {\n  seatsDetail: {\n    seatGroups: []\n  },\n};\n\nexport const seatsReducer = (state = intialState, { type, payload }) => {\n  switch (type) {\n    case ActionTypes.SET_SEATS:\n      return {\n        ...state,\n        seatsDetail: payload\n      };\n    case ActionTypes.SELECT_SEAT:\n      return {\n        ...state,\n        seatsDetail: { ...payload }\n      };\n    case ActionTypes.UNSELECT_SEAT:\n      return {\n        ...state,\n        seatsDetail: { ...payload }\n      };\n    default:\n      return state;\n  }\n};\n","import { ActionTypes } from \"../constants/action-types\";\nconst intialState = {\n  requiredSeats: 0,\n  noOfSeatsBooked: 0,\n  totalAmmount: 0\n};\n\nexport const seatBookingReducer = (state = intialState, { type, payload }) => {\n  switch (type) {\n    case ActionTypes.SET_REQUIREDSEATS:\n      return {\n        ...state,\n        requiredSeats: payload.requiredSeats\n      };\n    case ActionTypes.BOOK_SEAT:\n      return {\n        ...state,\n        noOfSeatsBooked: payload.noOfSeatsBooked,\n        totalAmmount: payload.totalAmmount\n      };\n    case ActionTypes.UNBOOK_SEAT:\n      return {\n        ...state,\n        noOfSeatsBooked: payload.noOfSeatsBooked,\n        totalAmmount: payload.totalAmmount\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport {moviesReducer} from \"./moviesReducer\";\nimport {seatsReducer} from \"./seatsReducer\";\nimport {seatBookingReducer} from \"./seatBookingReducer\"\n\nconst reducers = combineReducers({\n  movies: moviesReducer,\n  seats: seatsReducer,\n  bookedSeats: seatBookingReducer\n});\nexport default reducers;\n","import { createStore } from \"redux\";\n\nimport reducers from \"./reducers/index\";\n\nconst store = createStore(\n  reducers,\n  {}\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}