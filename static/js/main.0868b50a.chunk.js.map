{"version":3,"sources":["redux/constants/action-types.js","redux/actions/seatActions.js","components/Seat/Seat.js","redux/actions/seatBookingActions.js","components/SeatMatrix/SeatMatrix.js","components/RequiredSeats/RequiredSeats.js","pages/Booking/Booking.js","pages/MoviesListing/MoviesListings.js","redux/actions/moviesActions.js","App.js","redux/reducers/moviesReducer.js","redux/reducers/seatsReducer.js","redux/reducers/seatBookingReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["ActionTypes","selectSeat","seats","type","payload","Seat","props","className","extraCharges","status","restricted","title","seatNumber","bookSeat","seat","SeatMatrix","seatsDetail","useSelector","state","bookedSeats","dispatch","useDispatch","useState","selectedGroupId","setSelectedGropuId","selectSeatsHandler","currSeatsDetail","currBookedSeats","currSeatIndex","rowID","groupID","seatPrice","rowSize","newSeatsDeatil","newBookedSeats","seatGroups","rows","selectedPrice","specialChargePercentage","autoSelectedSeats","autoSelectedPrice","autoSelectionSeatsRequirement","requiredSeats","noOfSeatsBooked","seatIndex","totalAmmount","seatHandler","groupId","currSeatStatus","Object","keys","forEach","unSelectSeatsHandler","renderSeats","map","index","group","groupName","row","onClick","length","renderFooter","seatsInfo","dummy","movieName","RequiredSeats","selectedRequiredSeats","setSelectedRequiredSeats","no","Booking","movieId","useParams","fetchSeats","response","fakeAPI","getSeatsDeatailByMovie","useEffect","MovieListings","movies","fetchMovies","getMoviesList","renderList","moviesList","movie","to","src","imgURL","App","path","exact","component","intialState","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0868b50a.chunk.js","sourcesContent":["export const ActionTypes = {\n  SET_MOVIES: \"SET_MOVIES\",\n  SET_SEATS: \"SET_SEATS\",\n  SET_REQUIREDSEATS: \"SET_REQUIREDSEATS\",\n  SELECT_SEAT: \"SELECT_SEAT\",\n  UNSELECT_SEAT: \"UNSELECT_SEAT\",\n  BOOK_SEAT: \"BOOK_SEAT\",\n  UNBOOK_SEAT: \"UNBOOK_SEAT\"\n};\n","import { ActionTypes } from \"../constants/action-types\";\n\nexport const setSeats = (seats) => {\n  return {\n    type: ActionTypes.SET_SEATS,\n    payload: seats,\n  };\n};\n\nexport const selectSeat = (seats) => {\n  return {\n    type: ActionTypes.SELECT_SEAT,\n    payload: seats,\n  };\n};\n\nexport const unSelectSeat = (seats) => {\n  return {\n    type: ActionTypes.UNSELECT_SEAT,\n    payload: seats,\n  };\n};\n","import \"./Seat.css\"\n\nconst Seat = (props) => {\n    return <div className=\"wraper\">\n        {props.extraCharges && <span className=\"extra\">+10%</span>}\n        <div\n            className={`seat ${props.status}${(props.restricted) ? ' restricted' : ''}`}\n            title={(props.status === 'occupied') ? 'Seat already occupied' : (props.restricted) ? 'Select Seats from different Group' : ''}\n        >{props.seatNumber}\n        </div>\n    </div>\n}\n\n\nexport default Seat;","import { ActionTypes } from \"../constants/action-types\";\n\nexport const setRequiredSeats = (seats) => {\n  return {\n    type: ActionTypes.SET_REQUIREDSEATS,\n    payload: seats,\n  };\n};\n\nexport const bookSeat = (seat) => {\n  return {\n    type: ActionTypes.BOOK_SEAT,\n    payload: seat,\n  };\n};\n\nexport const unBookSeat = (seat) => {\n  return {\n    type: ActionTypes.UNBOOK_SEAT,\n    payload: seat,\n  };\n};\n","import \"./SeatMatrix.css\";\nimport Seat from \"../Seat/Seat\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectSeat } from \"../../redux/actions/seatActions\";\nimport { bookSeat } from \"../../redux/actions/seatBookingActions\";\nimport { useState } from \"react\";\n\n\n\nconst SeatMatrix = () => {\n    const { seatsDetail } = useSelector((state) => state.seats);\n    const { bookedSeats } = useSelector((state) => state);\n    const dispatch = useDispatch();\n    //Local state for seat group restrictions\n    const [selectedGroupId, setSelectedGropuId] = useState(null);\n\n    const selectSeatsHandler = (currSeatsDetail, currBookedSeats, currSeatIndex, rowID, groupID, seatPrice, rowSize) => {\n        let newSeatsDeatil = { ...currSeatsDetail };\n        const newBookedSeats = { ...currBookedSeats };\n        newSeatsDeatil.seatGroups[groupID].rows[rowID][currSeatIndex] = {\n            ...newSeatsDeatil.seatGroups[groupID].rows[rowID][currSeatIndex],\n            status: \"selected\"\n        }\n        let selectedPrice = seatPrice;\n        if (newSeatsDeatil.seatGroups[groupID].rows[rowID][currSeatIndex].specialChargePercentage) {\n            selectedPrice += (seatPrice * newSeatsDeatil.seatGroups[groupID].rows[rowID][currSeatIndex].specialChargePercentage) / 100;\n        }\n        // Select the adjacent Right seats, if available\n        let autoSelectedSeats = 0;\n        let autoSelectedPrice = 0;\n        let autoSelectionSeatsRequirement = newBookedSeats.requiredSeats - (newBookedSeats.noOfSeatsBooked + 1);\n        if ((rowSize - (currSeatIndex)) > autoSelectionSeatsRequirement) {\n            for (let seatIndex = currSeatIndex + 1; seatIndex <= currSeatIndex + autoSelectionSeatsRequirement; seatIndex++) {\n                if (newSeatsDeatil.seatGroups[groupID].rows[rowID][seatIndex].status !== 'available') {\n                    break;\n                } else {\n                    autoSelectedSeats++;\n                    autoSelectedPrice += seatPrice;\n                    if (newSeatsDeatil.seatGroups[groupID].rows[rowID][seatIndex].specialChargePercentage) {\n                        autoSelectedPrice += (seatPrice * newSeatsDeatil.seatGroups[groupID].rows[rowID][seatIndex].specialChargePercentage) / 100;\n                    }\n                    newSeatsDeatil.seatGroups[groupID].rows[rowID][seatIndex] = {\n                        ...newSeatsDeatil.seatGroups[groupID].rows[rowID][seatIndex],\n                        status: \"selected\"\n                    }\n                }\n            }\n        }\n        newBookedSeats.noOfSeatsBooked = newBookedSeats.noOfSeatsBooked + autoSelectedSeats + 1;\n        newBookedSeats.totalAmmount = newBookedSeats.totalAmmount + selectedPrice + autoSelectedPrice;\n        return { seatsDetail: newSeatsDeatil, bookedSeats: newBookedSeats };\n    }\n    const unSelectSeatsHandler = (currSeatsDetail, currBookedSeats) => {\n        const newSeatsDeatil = { ...currSeatsDetail };\n        Object.keys(newSeatsDeatil.seatGroups).forEach(groupID => {\n            Object.keys(newSeatsDeatil.seatGroups[groupID].rows).forEach(rowID => {\n                newSeatsDeatil.seatGroups[groupID].rows[rowID].forEach(seat => {\n                    if (seat.status === \"selected\") seat.status = \"available\";\n                })\n            })\n        })\n        const newBookedSeats = { ...currBookedSeats };\n        newBookedSeats.noOfSeatsBooked = 0;\n        newBookedSeats.totalAmmount = 0;\n        return { seatsDetail: newSeatsDeatil, bookedSeats: newBookedSeats };\n\n    }\n    const getSelectionGroup = (groupId) => {\n        if (!selectedGroupId) {\n            setSelectedGropuId(groupId);\n            return groupId;\n        } else if (selectedGroupId !== groupId) {\n            setSelectedGropuId(groupId);\n            return selectedGroupId;\n        }\n        else return selectedGroupId;\n    }\n\n    const seatHandler = (status, seatIndex, rowID, groupID, seatPrice, rowSize) => {\n        if (status === 'occupied') return;\n        // get the currently selected group\n        const currGroup = getSelectionGroup(groupID);\n        if (currGroup !== groupID || bookedSeats.noOfSeatsBooked === bookedSeats.requiredSeats) {\n            let currSeatStatus = unSelectSeatsHandler(seatsDetail, bookedSeats);\n            currSeatStatus = selectSeatsHandler(currSeatStatus.seatsDetail, currSeatStatus.bookedSeats, seatIndex, rowID, groupID, seatPrice, rowSize);\n            dispatch(selectSeat(currSeatStatus.seatsDetail));\n            dispatch(bookSeat(currSeatStatus.bookedSeats));\n        }\n        else if (status === \"available\") {\n            let currSeatStatus = selectSeatsHandler(seatsDetail, bookedSeats, seatIndex, rowID, groupID, seatPrice, rowSize);\n            dispatch(selectSeat(currSeatStatus.seatsDetail));\n            dispatch(bookSeat(currSeatStatus.bookedSeats));\n        }\n        else return null;\n    }\n\n    const renderSeats = <div className=\"seatMatrix\">{\n        Object.keys(seatsDetail.seatGroups).map((groupID, index) => {\n            const group = seatsDetail.seatGroups[groupID];\n            return (\n                <div className=\"seatGroup\" key={index}>\n                    <div className=\"groupDesc\" >{group.groupName}-Rs {group.seatPrice}</div>\n                    <div className=\"rows\" >\n                        {\n                            Object.keys(group.rows).map((row, index) => {\n                                return (<div className=\"seatsRow\" key={index}>\n                                    <div className=\"rowName\">{row}</div>{\n                                        group.rows[row].map((seat, index) => {\n                                            return (\n                                                <div onClick={() => seatHandler(seat.status, index, row, groupID, group.seatPrice, group.rows[row].length)}\n                                                    key={index}>\n                                                    <Seat\n                                                        status={(index === group.rows[row].length / 2) ? `${seat.status} midSeat` : seat.status}\n                                                        restricted={selectedGroupId !== groupID && selectedGroupId}\n                                                        seatNumber={seat.seatNumber}\n                                                        extraCharges={seat.specialChargePercentage}\n                                                    />\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            )\n\n        })}\n    </div>\n    const renderFooter = <div className=\"bookingFooter\">\n        <button className=\"payButton\">Pay {bookedSeats.totalAmmount}</button>\n    </div>\n    const seatsInfo = <div className=\"seatInfor\">\n        <div className=\"seatType\">\n            <Seat dummy={true} status=\"available\" />\n            <div className=\"seatDesc\">Available</div>\n        </div>\n        <div className=\"seatType\">\n            <Seat dummy={true} status=\"selected\" />\n            <div className=\"seatDesc\">Selected</div>\n        </div>\n        <div className=\"seatType\">\n            <Seat dummy={true} status=\"occupied\" />\n            <div className=\"seatDesc\">Occupied</div>\n        </div >\n    </div >\n    return (\n        <div>\n            <div className=\"bookingheader\">\n                <div className=\"movieName\">{seatsDetail.movieName}</div>\n                <div className=\"totalSelectedSeats\">{bookedSeats.noOfSeatsBooked} Seat{bookedSeats.noOfSeatsBooked !== 1 && 's'} Selected</div>\n            </div>\n            {renderSeats}\n            {(bookedSeats.requiredSeats === bookedSeats.noOfSeatsBooked) ? renderFooter : seatsInfo}\n        </div>\n    );\n}\n\nexport default SeatMatrix;","import \"./RequiredSeats.css\"\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setRequiredSeats } from \"../../redux/actions/seatBookingActions\";\n\nconst RequiredSeats = () => {\n    // Max values of required seats is 10\n    const noOfSeats = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    const [ selectedRequiredSeats, setSelectedRequiredSeats ] = useState(0);\n    const dispatch = useDispatch();\n\n    return (\n        <div className=\"requiredSeatsSelector\">\n            <div> Select Required Number of Seats </div>\n            <div className=\"seatOptions\">\n                {noOfSeats.map((no, index) => {\n                    return (\n                        <div\n                            className={`selectNoOfSeats${(selectedRequiredSeats === no) ? ' selected' : ''}`}\n                            onClick= {()=>setSelectedRequiredSeats(no)}\n                            key= {index}\n                        >\n                            {no}\n                        </div>\n                    )\n                })}\n            </div>\n            <button \n            className=\"seatSelect\"\n            onClick= {()=> {selectedRequiredSeats && dispatch(setRequiredSeats({\"requiredSeats\": selectedRequiredSeats}))}}\n            >Select Seats</button>\n        </div>\n    );\n}\n\nexport default RequiredSeats;","import { useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport fakeAPI from \"../../fakeAPI/getSeatsDeatailByMovie\";\nimport { setSeats } from \"../../redux/actions/seatActions\";\nimport SeatMatrix from \"../../components/SeatMatrix/SeatMatrix\";\nimport RequiredSeats from \"../../components/RequiredSeats/RequiredSeats\";\n\nconst Booking = () => {\n    const { movieId } = useParams();\n    const dispatch = useDispatch();\n    const { bookedSeats } = useSelector((state) => state);\n\n    //get list of Movies\n    const fetchSeats = () => {\n        const response = fakeAPI.getSeatsDeatailByMovie[movieId];\n        dispatch(setSeats(response));\n    }\n\n    useEffect(() => {\n        fetchSeats();\n    }, []);\n\n    return (\n        <>{(bookedSeats.requiredSeats) ? <SeatMatrix /> : <RequiredSeats />}</>\n    )\n}\n\nexport default Booking;","import fakeAPI from \"../../fakeAPI/getMoviesList\"\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setMovies } from \"../../redux/actions/moviesActions\";\nimport \"./MoviesListings.css\"\n\nconst MovieListings = () => {\n    const movies = useSelector((state) => state.movies);\n    const dispatch = useDispatch();\n\n    //get list of Movies\n    const fetchMovies = () => {\n        const response = fakeAPI.getMoviesList;\n        dispatch(setMovies(response));\n    }\n\n    useEffect(() => {\n        fetchMovies();\n    }, []);\n\n\n    const renderList = movies.moviesList.map(movie => {\n        return (\n            <div className=\"moviesListing\" key={movie.movieId}>\n                <Link to={`/booking/${movie.movieId}`}>\n                    <div className=\"card\">\n                        <div className=\"image\">\n                            <img src={movie.imgURL} />\n                        </div>\n                        <div className=\"content\">\n                            <div className= \"contentHeader\">{movie.movieName}</div>\n                        </div>\n                    </div>\n                </Link>\n            </div>\n        );\n    })\n    return (\n        <>{renderList}</>\n    );\n}\n\nexport default MovieListings;","import { ActionTypes } from \"../constants/action-types\";\n\nexport const setMovies = (moviesList) => {\n  return {\n    type: ActionTypes.SET_MOVIES,\n    payload: moviesList,\n  };\n};\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Booking from \"./pages/Booking/Booking\";\nimport MovieListings from \"./pages/MoviesListing/MoviesListings\";\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={MovieListings} />\n          <Route path=\"/booking/:movieId\" component={Booking} />\n          <Route>404 Not Found!</Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ActionTypes } from \"../constants/action-types\";\nconst intialState = {\n  moviesList: []\n};\n\nexport const moviesReducer = (state = intialState, { type, payload }) => {\n  switch (type) {\n    case ActionTypes.SET_MOVIES:\n      return { ...state,\n        moviesList: payload };\n    default:\n      return state;\n  }\n};\n","import { ActionTypes } from \"../constants/action-types\";\nconst intialState = {\n  seatsDetail: {\n    seatGroups: []\n  },\n};\n\nexport const seatsReducer = (state = intialState, { type, payload }) => {\n  switch (type) {\n    case ActionTypes.SET_SEATS:\n      return {\n        ...state,\n        seatsDetail: payload\n      };\n    case ActionTypes.SELECT_SEAT:\n      return {\n        ...state,\n        seatsDetail: { ...payload }\n      };\n    case ActionTypes.UNSELECT_SEAT:\n      return {\n        ...state,\n        seatsDetail: { ...payload }\n      };\n    default:\n      return state;\n  }\n};\n","import { ActionTypes } from \"../constants/action-types\";\nconst intialState = {\n  requiredSeats: 0,\n  noOfSeatsBooked: 0,\n  totalAmmount: 0\n};\n\nexport const seatBookingReducer = (state = intialState, { type, payload }) => {\n  switch (type) {\n    case ActionTypes.SET_REQUIREDSEATS:\n      return {\n        ...state,\n        requiredSeats: payload.requiredSeats\n      };\n    case ActionTypes.BOOK_SEAT:\n      return {\n        ...state,\n        noOfSeatsBooked: payload.noOfSeatsBooked,\n        totalAmmount: payload.totalAmmount\n      };\n    case ActionTypes.UNBOOK_SEAT:\n      return {\n        ...state,\n        noOfSeatsBooked: payload.noOfSeatsBooked,\n        totalAmmount: payload.totalAmmount\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport {moviesReducer} from \"./moviesReducer\";\nimport {seatsReducer} from \"./seatsReducer\";\nimport {seatBookingReducer} from \"./seatBookingReducer\"\n\nconst reducers = combineReducers({\n  movies: moviesReducer,\n  seats: seatsReducer,\n  bookedSeats: seatBookingReducer\n});\nexport default reducers;\n","import { createStore } from \"redux\";\n\nimport reducers from \"./reducers/index\";\n\nconst store = createStore(\n  reducers,\n  {}\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}